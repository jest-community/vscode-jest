{
  "name": "vscode-jest",
  "displayName": "Jest",
  "description": "Use Facebook's Jest With Pleasure.",
  "version": "6.1.0",
  "publisher": "Orta",
  "engines": {
    "vscode": "^1.68.1"
  },
  "author": {
    "name": "Orta Therox, ConnectDotz & Sean Poulter",
    "url": "https://github.com/jest-community/vscode-jest"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jest-community/vscode-jest"
  },
  "galleryBanner": {
    "theme": "dark",
    "color": "#384357"
  },
  "categories": [
    "Other",
    "Testing"
  ],
  "keywords": [
    "jest",
    "debug",
    "snippet",
    "react",
    "multi-root ready"
  ],
  "activationEvents": [
    "workspaceContains:**/jest.config.{js,ts,mjs,cjs,json}",
    "workspaceContains:**/jest.json",
    "workspaceContains:node_modules/.bin/jest",
    "workspaceContains:node_modules/react-scripts/node_modules/.bin/jest",
    "workspaceContains:node_modules/react-native-scripts",
    "workspaceContains:**/.vscode-jest"
  ],
  "main": "./out/extension",
  "icon": "images/vscode-jest.png",
  "extensionKind": [
    "workspace"
  ],
  "contributes": {
    "languages": [
      {
        "id": "jest-snapshot",
        "extensions": [
          ".js.snap",
          ".jsx.snap",
          ".ts.snap",
          ".tsx.snap"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "jest-snapshot",
        "scopeName": "source.jest.snap",
        "path": "./syntaxes/jest-snapshot.tmLanguage"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Jest",
      "properties": {
        "jest.enable": {
          "markdownDescription": "enable/disable jest extension for the workspace folder. Default is true",
          "type": "boolean",
          "scope": "resource",
          "default": true
        },
        "jest.jestCommandLine": {
          "description": "The command line to start jest tests. It should be the same command line users run jest tests from a terminal/shell, with ability to append extra arguments (by the extension at runtime)",
          "type": "string",
          "scope": "resource"
        },
        "jest.autoClearTerminal": {
          "description": "Clear the terminal output at the start of any new test run.",
          "type": "boolean",
          "scope": "resource",
          "markdownDeprecationMessage": "**Deprecated**: Please use [outputConfig](https://github.com/jest-community/vscode-jest#outputconfig) instead.",
          "deprecationMessage": "Deprecated: Please use jest.outputConfig instead."
        },
        "jest.rootPath": {
          "description": "The path to your frontend src folder",
          "type": "string",
          "default": "",
          "scope": "resource"
        },
        "jest.nodeEnv": {
          "markdownDescription": "The env passed to runner process in addition to `process.env`",
          "type": "object",
          "default": null,
          "scope": "resource"
        },
        "jest.shell": {
          "markdownDescription": "The shell path or a login-shell to override jest runner process default shell (see Node [child_process.spawn()](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options)) for more detail)",
          "type": [
            "string",
            "object"
          ],
          "default": null,
          "scope": "resource"
        },
        "jest.showCoverageOnLoad": {
          "description": "Show code coverage when extension starts (if collected)",
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "markdownDeprecationMessage": "**Deprecated**: Please use [runMode](https://github.com/jest-community/vscode-jest/blob/master/README.md#runmode) instead.",
          "deprecationMessage": "Deprecated: Please use jest.runMode instead."
        },
        "jest.coverageFormatter": {
          "description": "Coverage formatter to use",
          "type": "string",
          "enum": [
            "DefaultFormatter",
            "GutterFormatter"
          ],
          "default": "DefaultFormatter",
          "scope": "resource"
        },
        "jest.coverageColors": {
          "markdownDescription": "Coverage indicator color override. See [Coverage Colors](https://github.com/jest-community/vscode-jest/blob/master/README.md#coverageColors) for details and examples",
          "type": "object",
          "default": null,
          "scope": "resource"
        },
        "jest.debugMode": {
          "description": "Enable debug mode to diagnose plugin issues. (see developer console)",
          "type": "boolean",
          "default": false,
          "scope": "resource"
        },
        "jest.disabledWorkspaceFolders": {
          "description": "Disabled workspace folders names in multiroot environment",
          "type": "array",
          "items": "string",
          "default": [],
          "scope": "window"
        },
        "jest.autoRun": {
          "markdownDescription": "Control when jest should run (changed) tests. It supports multiple models, such as fully automated, onSave, and on-demand... See [AutoRun](https://github.com/jest-community/vscode-jest/blob/master/README.md#how-to-trigger-the-test-run) for details and examples",
          "type": [
            "object",
            "string"
          ],
          "default": null,
          "scope": "resource",
          "markdownDeprecationMessage": "**Deprecated**: Please use [runMode](https://github.com/jest-community/vscode-jest/blob/master/README.md#runmode) instead.",
          "deprecationMessage": "Deprecated: Please use jest.runMode instead."
        },
        "jest.testExplorer": {
          "markdownDescription": "Configure jest TestExplorer. See valid [formats](https://github.com/jest-community/vscode-jest/blob/master/README.md#testexplorer) or [how to use test explorer](https://github.com/jest-community/vscode-jest/blob/master/README.md#how-to-use-the-test-explorer) for more details",
          "type": "object",
          "default": null,
          "scope": "resource",
          "markdownDeprecationMessage": "**Deprecated**: Please use [runMode](https://github.com/jest-community/vscode-jest/blob/master/README.md#runmode) instead.",
          "deprecationMessage": "Deprecated: Please use jest.runMode instead."
        },
        "jest.monitorLongRun": {
          "markdownDescription": "Enable monitoring for long running test process. See valid [monitorLongRun](https://github.com/jest-community/vscode-jest/blob/master/README.md#monitorLongRun) for details",
          "type": [
            "string",
            "integer"
          ],
          "default": 60000,
          "scope": "resource"
        },
        "jest.autoRevealOutput": {
          "description": "Review jest output terminal",
          "type": "string",
          "default": "on-run",
          "enum": [
            "on-run",
            "on-exec-error",
            "off"
          ],
          "enumDescriptions": [
            "auto show output when test run starts",
            "auto show test output when execution error occurred",
            "disable auto show test output"
          ],
          "scope": "resource",
          "markdownDeprecationMessage": "**Deprecated**: Please use [outputConfig](https://github.com/jest-community/vscode-jest#outputconfig) instead.",
          "deprecationMessage": "Deprecated: Please use jest.outputConfig instead."
        },
        "jest.parserPluginOptions": {
          "markdownDescription": "Configure babel parser plugins. See valid [format](https://github.com/jest-community/vscode-jest#parserpluginoptions)",
          "type": "object",
          "default": null,
          "scope": "resource"
        },
        "jest.useDashedArgs": {
          "markdownDescription": "Use dashed args for jest command line.",
          "type": "boolean",
          "default": false,
          "scope": "resource"
        },
        "jest.virtualFolders": {
          "markdownDescription": "Allows multiple jest run config for a given (physical) folder. See valid [format](https://github.com/jest-community/vscode-jest#virtualfolders)",
          "type": [
            "array",
            "null"
          ],
          "default": null,
          "items": {
            "type": "object"
          }
        },
        "jest.outputConfig": {
          "scope": "window",
          "type": [
            "string",
            "object"
          ],
          "markdownDescription": "Control jest output preference. See details in [outputConfig](https://github.com/jest-community/vscode-jest#outputconfig).",
          "default": null,
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "neutral",
                "terminal-based",
                "test-results-based"
              ],
              "enumDescriptions": [
                "A passive and neutral config, will not automatically change active panel nor clear output.",
                "Switch to terminal panel when running tests.",
                "Switch to test-results panel when running tests."
              ],
              "description": "Specifies the predefined common outputConfig in a string form."
            },
            {
              "type": "object",
              "properties": {
                "revealOn": {
                  "type": "string",
                  "enum": [
                    "run",
                    "error",
                    "demand"
                  ],
                  "enumDescriptions": [
                    "Reveal the output upon test run.",
                    "Reveal the output upon test error.",
                    "Reveal the output on demand."
                  ],
                  "default": "run",
                  "description": "Determines when to reveal the test run output. Default is 'run'."
                },
                "revealWithFocus": {
                  "type": "string",
                  "enum": [
                    "none",
                    "terminal",
                    "test-results"
                  ],
                  "enumDescriptions": [
                    "Do not change focus when revealing output.",
                    "Switch to terminal when revealing output.",
                    "Switch to test-results panel when revealing output."
                  ],
                  "default": "none",
                  "description": "Specifies which output panel, if any, to switch focus to when revealing. Default is 'none'."
                },
                "clearOnRun": {
                  "type": "string",
                  "enum": [
                    "none",
                    "both",
                    "terminal",
                    "test-results"
                  ],
                  "enumDescriptions": [
                    "Do not automatically clear the output before each run.",
                    "Clear both the terminal and test results output before each run.",
                    "Clear the terminal output before each run.",
                    "Clear the test results output before each run."
                  ],
                  "default": "none",
                  "description": "Specifies which output, if any, to be cleared before each run. Default is 'none'."
                }
              },
              "description": "Specifies a custom output config in an object form."
            }
          ]
        },
        "jest.runMode": {
          "markdownDescription": "Control when to run jest tests and present the results. See details in [runMode](https://github.com/jest-community/vscode-jest#runmode)",
          "default": null,
          "scope": "resource",
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "watch",
                "on-demand",
                "on-save",
                "deferred"
              ],
              "markdownDescription": "A predefined Jest run mode. See details in [runMode](https://github.com/jest-community/vscode-jest#runmode)"
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "watch",
                    "on-demand",
                    "on-save"
                  ],
                  "description": "Specifies the jest run mode type."
                },
                "runAllTestsOnStartup": {
                  "type": "boolean",
                  "description": "Specifies whether to run all tests on startup."
                },
                "coverage": {
                  "type": "boolean",
                  "description": "Specifies whether to collect and report coverage information."
                },
                "showInlineError": {
                  "type": "boolean",
                  "description": "Specify if to enable inline error display in test file editor"
                },
                "deferred": {
                  "type": "boolean",
                  "description": "Specifies whether the run mode is deferred."
                }
              },
              "required": [
                "type"
              ],
              "additionalProperties": true,
              "if": {
                "properties": {
                  "type": {
                    "const": "on-save"
                  }
                }
              },
              "then": {
                "properties": {
                  "testFileOnly": {
                    "type": "boolean",
                    "description": "if true, will run tests only when saving test files."
                  }
                },
                "additionalProperties": true
              },
              "else": {
                "not": {
                  "required": [
                    "testFileOnly"
                  ]
                },
                "errorMessage": "The property 'testFileOnly' should only be present when 'type' is 'on-save'.",
                "additionalProperties": true
              },
              "markdownDescription": "A detailed runMode configuration. See details in [runMode](https://github.com/jest-community/vscode-jest#runmode)"
            }
          ]
        }
      }
    },
    "commands": [
      {
        "command": "io.orta.jest.start",
        "title": "Jest: Start All Runners"
      },
      {
        "command": "io.orta.jest.stop",
        "title": "Jest: Stop All Runners"
      },
      {
        "command": "io.orta.jest.toggle-coverage",
        "title": "Jest: Toggle Coverage"
      },
      {
        "command": "io.orta.jest.workspace.start",
        "title": "Jest: Start Runner (Select Workspace)"
      },
      {
        "command": "io.orta.jest.workspace.stop",
        "title": "Jest: Stop Runner (Select Workspace)"
      },
      {
        "command": "io.orta.jest.workspace.toggle-coverage",
        "title": "Jest: Toggle Coverage (Select Workspace)"
      },
      {
        "command": "io.orta.jest.workspace.run-all-tests",
        "title": "Jest: Run All Tests (Select Workspace)"
      },
      {
        "command": "io.orta.jest.workspace.save-run-mode",
        "title": "Jest: Save Current RunMode"
      },
      {
        "command": "io.orta.jest.save-output-config",
        "title": "Jest: Save Current Output Config"
      },
      {
        "command": "io.orta.jest.run-all-tests",
        "title": "Jest: Run All Tests"
      },
      {
        "command": "io.orta.jest.editor.workspace.run-all-tests",
        "title": "Jest: Run All Tests in Current Workspace"
      },
      {
        "command": "io.orta.jest.editor.workspace.toggle-coverage",
        "title": "Jest: Toggle Coverage for Current Workspace"
      },
      {
        "command": "io.orta.jest.editor.run-all-tests",
        "title": "Jest: Run Related Tests"
      },
      {
        "command": "io.orta.jest.setup-extension",
        "title": "Jest: Setup Extension"
      },
      {
        "command": "io.orta.jest.test-item.run-mode.change",
        "title": "Change RunMode",
        "icon": "$(gear)"
      },
      {
        "command": "io.orta.jest.test-item.reveal-output",
        "title": "Reveal Test Output",
        "icon": "$(terminal)"
      },
      {
        "command": "io.orta.jest.test-item.view-snapshot",
        "title": "View Snapshot",
        "icon": "$(camera)"
      },
      {
        "command": "io.orta.jest.test-item.update-snapshot",
        "title": "Update Snapshot",
        "icon": "$(export)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "io.orta.jest.workspace.start",
          "when": "jest.folderCount > 1"
        },
        {
          "command": "io.orta.jest.workspace.stop",
          "when": "jest.folderCount > 1"
        },
        {
          "command": "io.orta.jest.workspace.toggle-coverage",
          "when": "jest.folderCount > 1"
        },
        {
          "command": "io.orta.jest.editor.workspace.toggle-coverage",
          "when": "jest.folderCount > 1"
        },
        {
          "command": "io.orta.jest.workspace.run-all-tests",
          "when": "jest.folderCount > 1"
        },
        {
          "command": "io.orta.jest.editor.workspace.run-all-tests",
          "when": "jest.folderCount > 1"
        },
        {
          "command": "io.orta.jest.editor.run-all-tests",
          "when": "jest.never"
        },
        {
          "command": "io.orta.jest.test-item.run-mode.change",
          "when": "jest.never"
        },
        {
          "command": "io.orta.jest.test-item.reveal-output",
          "when": "jest.never"
        },
        {
          "command": "io.orta.jest.test-item.view-snapshot",
          "when": "jest.never"
        },
        {
          "command": "io.orta.jest.test-item.update-snapshot",
          "when": "jest.never"
        }
      ],
      "editor/context": [
        {
          "when": "editorLangId =~ /(javascript|javascriptreact|typescript|typescriptreact|vue)/ ",
          "command": "io.orta.jest.editor.run-all-tests",
          "group": "Jest"
        }
      ],
      "testing/item/context": [
        {
          "command": "io.orta.jest.test-item.run-mode.change",
          "group": "inline@1",
          "when": "testId in jest.runMode"
        },
        {
          "command": "io.orta.jest.test-item.reveal-output",
          "group": "inline@2",
          "when": "testId in jest.workspaceRoot"
        },
        {
          "command": "io.orta.jest.test-item.update-snapshot"
        }
      ],
      "testing/item/gutter": [
        {
          "command": "io.orta.jest.test-item.view-snapshot",
          "when": "testId in jest.editor-view-snapshot"
        },
        {
          "command": "io.orta.jest.test-item.update-snapshot",
          "when": "testId in jest.editor-update-snapshot"
        }
      ]
    },
    "keybindings": [
      {
        "command": "io.orta.jest.editor.run-all-tests",
        "key": "ctrl+alt+t",
        "mac": "ctrl+alt+t",
        "when": "editorLangId =~ /(javascript|javascriptreact|typescript|typescriptreact|vue)/ "
      }
    ],
    "debuggers": [
      {
        "type": "vscode-jest-tests",
        "label": "Debug Jest tests using vscode-jest",
        "languages": [
          "javascript",
          "javascriptreact",
          "typescript",
          "typescriptreact"
        ],
        "configurationSnippets": [
          {
            "label": "Jest: Default jest configuration",
            "description": "Running tests by directly running jest",
            "body": {
              "type": "node",
              "name": "vscode-jest-tests.v2",
              "request": "launch",
              "program": "^\"\\${workspaceFolder}/node_modules/.bin/jest\"",
              "args": [
                "--runInBand",
                "--watchAll=false",
                "--testNamePattern",
                "${jest.testNamePattern}",
                "--runTestsByPath",
                "${jest.testFile}"
              ],
              "cwd": "^\"\\${workspaceFolder}\"",
              "console": "integratedTerminal",
              "internalConsoleOptions": "neverOpen",
              "disableOptimisticBPs": true,
              "windows": {
                "program": "^\"\\${workspaceFolder}/node_modules/jest/bin/jest\""
              }
            }
          },
          {
            "label": "Jest: create-react-app",
            "description": "Running jest within apps bootstrapped by create-react-app (and similar); you may have to edit `runtimeExecutable`",
            "body": {
              "type": "node",
              "name": "vscode-jest-tests.v2",
              "request": "launch",
              "runtimeExecutable": "^\"\\${workspaceFolder}/node_modules/.bin/react-scripts\"",
              "args": [
                "test",
                "--env=jsdom",
                "--runInBand",
                "--watchAll=false",
                "--testNamePattern",
                "${jest.testNamePattern}",
                "--runTestsByPath",
                "${jest.testFile}"
              ],
              "cwd": "^\"\\${workspaceFolder}\"",
              "console": "integratedTerminal",
              "protocol": "inspector",
              "internalConsoleOptions": "neverOpen",
              "disableOptimisticBPs": true
            }
          },
          {
            "label": "Jest: create-react-app (ejected)",
            "description": "Running jest within apps bootstrapped by create-react-app (and similar) after ejecting",
            "body": {
              "type": "node",
              "name": "vscode-jest-tests.v2",
              "request": "launch",
              "program": "^\"\\${workspaceFolder}/scripts/test\"",
              "args": [
                "--env=jsdom",
                "--runInBand",
                "--watchAll=false",
                "--testNamePattern",
                "${jest.testNamePattern}",
                "--runTestsByPath",
                "${jest.testFile}"
              ],
              "cwd": "^\"\\${workspaceFolder}\"",
              "console": "integratedTerminal",
              "protocol": "inspector",
              "internalConsoleOptions": "neverOpen",
              "disableOptimisticBPs": true
            }
          },
          {
            "label": "Jest: Angular (with Yarn)",
            "description": "Running tests by using 'yarn test'",
            "body": {
              "type": "node",
              "name": "vscode-jest-tests.v2",
              "request": "launch",
              "runtimeExecutable": "yarn",
              "args": [
                "test",
                "--run-in-band",
                "--watch-all=false",
                "--test-name-pattern",
                "${jest.testNamePattern}",
                "--test-path-pattern",
                "${jest.testFilePattern}"
              ],
              "cwd": "^\"\\${workspaceFolder}\"",
              "console": "integratedTerminal",
              "internalConsoleOptions": "neverOpen",
              "disableOptimisticBPs": true
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "ci": "yarn lint && yarn test --coverage",
    "clean-out": "rimraf ./out",
    "vscode:prepublish": "yarn clean-out && yarn compile",
    "compile": "webpack --mode production",
    "watch": "webpack --mode development --watch --progress",
    "lint": "eslint \"src/**/*.ts\" \"tests/**/*.ts\" \"*.json\"  \"*.js\" ",
    "test": "jest",
    "watch-test": "yarn test -- --watch",
    "tsc": "tsc --noEmit",
    "update-vscode-type": "npx vscode-dts main; mv ./vscode.d.ts ./typings",
    "compare-coverage": "ts-node scripts/compare-coverage.ts "
  },
  "dependencies": {
    "istanbul-lib-coverage": "^3.2.0",
    "istanbul-lib-source-maps": "^4.0.1",
    "jest-editor-support": "^31.1.2"
  },
  "devDependencies": {
    "@types/fs-extra": "^11.0.2",
    "@types/istanbul-lib-coverage": "^2.0.4",
    "@types/istanbul-lib-source-maps": "^4.0.1",
    "@types/jest": "^29.5.6",
    "@types/node": "^20.8.10",
    "@typescript-eslint/eslint-plugin": "^6.9.1",
    "@typescript-eslint/parser": "^6.9.1",
    "@vscode/test-electron": "^2.2.2",
    "eslint": "^8.31.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-jest": "^27.2.1",
    "eslint-plugin-jsdoc": "^46.8.2",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-prettier": "^5.0.1",
    "fs-extra": "^11.1.1",
    "jest": "^29.7",
    "jest-snapshot": "^27.2.0",
    "prettier": "^3.0.3",
    "raw-loader": "^4.0.1",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.0.3",
    "ts-loader": "^9.4.2",
    "ts-node": "^10.9.1",
    "typescript": "^5.2.2",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.1"
  },
  "__metadata": {
    "id": "7997a8ae-1fae-4022-b834-12f6318aeffd",
    "publisherDisplayName": "Orta",
    "publisherId": "c22b4001-1af3-48d1-87ed-490c6c3b747f"
  }
}
