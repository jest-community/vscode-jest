{
  "name": "vscode-jest",
  "displayName": "Jest",
  "description": "Use Facebook's Jest With Pleasure.",
  "version": "4.2.0",
  "publisher": "Orta",
  "engines": {
    "vscode": "^1.59.0"
  },
  "author": {
    "name": "Orta Therox, ConnectDotz & Sean Poulter",
    "url": "https://github.com/jest-community/vscode-jest"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jest-community/vscode-jest"
  },
  "galleryBanner": {
    "theme": "dark",
    "color": "#384357"
  },
  "categories": [
    "Other",
    "Testing"
  ],
  "keywords": [
    "jest",
    "debug",
    "snippet",
    "react",
    "multi-root ready"
  ],
  "activationEvents": [
    "workspaceContains:jest.config.js",
    "workspaceContains:jest.json",
    "workspaceContains:node_modules/.bin/jest",
    "workspaceContains:node_modules/react-scripts/node_modules/.bin/jest",
    "workspaceContains:node_modules/react-native-scripts",
    "onCommand:io.orta.jest.start"
  ],
  "main": "./out/extension",
  "icon": "images/vscode-jest.png",
  "extensionKind": [
    "workspace"
  ],
  "contributes": {
    "languages": [
      {
        "id": "jest-snapshot",
        "extensions": [
          ".js.snap",
          ".jsx.snap",
          ".ts.snap",
          ".tsx.snap"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "jest-snapshot",
        "scopeName": "source.jest.snap",
        "path": "./syntaxes/jest-snapshot.tmLanguage"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Jest",
      "properties": {
        "jest.autoEnable": {
          "description": "Automatically start Jest for this project",
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "markdownDeprecationMessage": "**Deprecated**: please use `#jest.autoRun#` instead."
        },
        "jest.jestCommandLine": {
          "description": "The command line to start jest tests. It should be the same command line users run jest tests from a terminal/shell, with ability to append extra arguments (by the extension at runtime)",
          "type": "string",
          "scope": "resource"
        },
        "jest.pathToJest": {
          "description": "(deprecated) The path to the Jest binary, or an npm command to run tests suffixed with `--` e.g. `node_modules/.bin/jest` or `npm test --`",
          "type": "string",
          "default": null,
          "scope": "resource",
          "markdownDeprecationMessage": "**Deprecated**: please use `#jest.jestCommandLine#` instead."
        },
        "jest.pathToConfig": {
          "description": "(deprecated) The path to your Jest configuration file",
          "type": "string",
          "default": "",
          "scope": "resource",
          "markdownDeprecationMessage": "**Deprecated**: please use `#jest.jestCommandLine#` instead."
        },
        "jest.rootPath": {
          "description": "The path to your frontend src folder",
          "type": "string",
          "default": "",
          "scope": "resource"
        },
        "jest.nodeEnv": {
          "markdownDescription": "The env passed to runner process in addtion to `process.env`",
          "type": [
            "object",
            "null"
          ],
          "default": null,
          "scope": "resource"
        },
        "jest.shell": {
          "markdownDescription": "The shell path to override jest runner process default shell (see Node [child_process.spawn()](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options)) for more detail)",
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "scope": "resource"
        },
        "jest.enableSnapshotUpdateMessages": {
          "description": "Whether snapshot update messages should show",
          "type": "boolean",
          "default": true,
          "scope": "resource"
        },
        "jest.runAllTestsFirst": {
          "description": "Run all tests before starting Jest in watch mode",
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "markdownDeprecationMessage": "**Deprecated**: in favor of `#jest.autoRun#`"
        },
        "jest.showCoverageOnLoad": {
          "description": "Show code coverage when extension starts (if collected)",
          "type": "boolean",
          "default": false,
          "scope": "resource"
        },
        "jest.coverageFormatter": {
          "description": "Coverage formatter to use",
          "type": "string",
          "enum": [
            "DefaultFormatter",
            "GutterFormatter"
          ],
          "default": "DefaultFormatter",
          "scope": "resource"
        },
        "jest.coverageColors": {
          "markdownDescription": "Coverage indicator color override. See [Coverage Colors](https://github.com/jest-community/vscode-jest/blob/master/README.md#coverageColors) for details and examples",
          "type": "object",
          "default": null,
          "scope": "resource"
        },
        "jest.enableCodeLens": {
          "description": "Whether codelens for debugging should show",
          "type": "boolean",
          "default": true,
          "scope": "window"
        },
        "jest.debugCodeLens.showWhenTestStateIn": {
          "description": "Show the debug CodeLens when the it/test block state is in this collection",
          "type": "array",
          "items": {
            "enum": [
              "fail",
              "pass",
              "skip",
              "unknown"
            ]
          },
          "default": [
            "fail",
            "unknown"
          ],
          "scope": "window"
        },
        "jest.enableSnapshotPreviews": {
          "description": "Whether snapshot previews should show",
          "type": "boolean",
          "default": true,
          "scope": "window"
        },
        "jest.restartJestOnSnapshotUpdate": {
          "description": "Restart Jest runner after updating the snapshots",
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "markdownDeprecationMessage": "**Deprecated**: no need to restart jest after snapshot update"
        },
        "jest.debugMode": {
          "description": "Enable debug mode to diagnose plugin issues. (see developer console)",
          "type": "boolean",
          "default": false,
          "scope": "resource"
        },
        "jest.disabledWorkspaceFolders": {
          "description": "Disabled workspace folders names in multiroot environment",
          "type": "array",
          "items": "string",
          "default": [],
          "scope": "window"
        },
        "jest.autoRun": {
          "markdownDescription": "Control when jest should run (changed) tests. It supports multiple models, such as fully automated, fully manual and onSave... See [AutoRun](https://github.com/jest-community/vscode-jest/blob/master/README.md#how-to-trigger-the-test-run) for details and examples",
          "type": [
            "object",
            "string",
            "null"
          ],
          "default": null,
          "scope": "resource"
        },
        "jest.testExplorer": {
          "markdownDescription": "Configure jest TestExplorer. See valid [formats](https://github.com/jest-community/vscode-jest/blob/master/README.md#testexplorer) or [how to use test explorer](https://github.com/jest-community/vscode-jest/blob/master/README.md#how-to-use-the-test-explorer) for more details",
          "type": "object",
          "default": {
            "enabled": true
          },
          "scope": "resource"
        }
      }
    },
    "commands": [
      {
        "command": "io.orta.jest.start",
        "title": "Jest: Start All Runners"
      },
      {
        "command": "io.orta.jest.stop",
        "title": "Jest: Stop All Runners"
      },
      {
        "command": "io.orta.jest.toggle-coverage",
        "title": "Jest: Toggle Coverage"
      },
      {
        "command": "io.orta.jest.workspace.start",
        "title": "Jest: Start Runner (Select Workspace)"
      },
      {
        "command": "io.orta.jest.workspace.stop",
        "title": "Jest: Stop Runner (Select Workspace)"
      },
      {
        "command": "io.orta.jest.workspace.toggle-coverage",
        "title": "Jest: Toggle Coverage (Select Workspace)"
      },
      {
        "command": "io.orta.jest.workspace.run-all-tests",
        "title": "Jest: Run All Tests (Select Workspace)"
      },
      {
        "command": "io.orta.jest.run-all-tests",
        "title": "Jest: Run All Tests"
      },
      {
        "command": "io.orta.jest.editor.workspace.run-all-tests",
        "title": "Jest: Run All Tests in Current Workspace"
      },
      {
        "command": "io.orta.jest.editor.workspace.toggle-coverage",
        "title": "Jest: Toggle Coverage for Current Workspace"
      },
      {
        "command": "io.orta.jest.editor.run-all-tests",
        "title": "Jest: Run Related Tests"
      },
      {
        "command": "io.orta.jest.setup-extension",
        "title": "Jest: Setup Extension (Beta)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "io.orta.jest.workspace.start",
          "when": "workspaceFolderCount > 1"
        },
        {
          "command": "io.orta.jest.workspace.stop",
          "when": "workspaceFolderCount > 1"
        },
        {
          "command": "io.orta.jest.workspace.toggle-coverage",
          "when": "workspaceFolderCount > 1"
        },
        {
          "command": "io.orta.jest.editor.workspace.toggle-coverage",
          "when": "workspaceFolderCount > 1"
        },
        {
          "command": "io.orta.jest.workspace.run-all-tests",
          "when": "jest:run.interactive && workspaceFolderCount > 1"
        },
        {
          "command": "io.orta.jest.run-all-tests",
          "when": "jest:run.interactive"
        },
        {
          "command": "io.orta.jest.editor.workspace.run-all-tests",
          "when": "jest:run.interactive && workspaceFolderCount > 1"
        },
        {
          "command": "io.orta.jest.editor.run-all-tests",
          "when": "jest:never"
        }
      ],
      "editor/context": [
        {
          "when": "jest:run.interactive && editorLangId =~ /(javascript|javascriptreact|typescript|typescriptreact)/ ",
          "command": "io.orta.jest.editor.run-all-tests",
          "group": "Jest"
        }
      ]
    },
    "keybindings": [
      {
        "command": "io.orta.jest.editor.run-all-tests",
        "key": "ctrl+alt+t",
        "mac": "ctrl+alt+t",
        "when": "jest:run.interactive && editorLangId =~ /(javascript|javascriptreact|typescript|typescriptreact)/ "
      }
    ],
    "debuggers": [
      {
        "type": "vscode-jest-tests",
        "label": "Debug Jest tests using vscode-jest",
        "languages": [
          "javascript",
          "javascriptreact",
          "typescript",
          "typescriptreact"
        ],
        "configurationSnippets": [
          {
            "label": "Jest: Default jest configuration",
            "description": "Running tests by directly running jest",
            "body": {
              "type": "node",
              "name": "vscode-jest-tests",
              "request": "launch",
              "program": "^\"\\${workspaceFolder}/node_modules/.bin/jest\"",
              "args": [
                "--runInBand",
                "--watchAll=false"
              ],
              "cwd": "^\"\\${workspaceFolder}\"",
              "console": "integratedTerminal",
              "internalConsoleOptions": "neverOpen",
              "disableOptimisticBPs": true,
              "windows": {
                "program": "^\"\\${workspaceFolder}/node_modules/jest/bin/jest\""
              }
            }
          },
          {
            "label": "Jest: create-react-app",
            "description": "Running jest within apps bootstrapped by create-react-app (and similar); you may have to edit `runtimeExecutable`",
            "body": {
              "type": "node",
              "name": "vscode-jest-tests",
              "request": "launch",
              "runtimeExecutable": "^\"\\${workspaceFolder}/node_modules/.bin/react-scripts\"",
              "args": [
                "test",
                "--env=jsdom",
                "--runInBand",
                "--watchAll=false"
              ],
              "cwd": "^\"\\${workspaceFolder}\"",
              "console": "integratedTerminal",
              "protocol": "inspector",
              "internalConsoleOptions": "neverOpen",
              "disableOptimisticBPs": true
            }
          },
          {
            "label": "Jest: create-react-app (ejected)",
            "description": "Running jest within apps bootstrapped by create-react-app (and similar) after ejecting",
            "body": {
              "type": "node",
              "name": "vscode-jest-tests",
              "request": "launch",
              "program": "^\"\\${workspaceFolder}/scripts/test\"",
              "args": [
                "--env=jsdom",
                "--runInBand",
                "--watchAll=false"
              ],
              "cwd": "^\"\\${workspaceFolder}\"",
              "console": "integratedTerminal",
              "protocol": "inspector",
              "internalConsoleOptions": "neverOpen",
              "disableOptimisticBPs": true
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "ci": "yarn lint && yarn test --coverage",
    "clean-out": "rimraf ./out",
    "vscode:prepublish": "yarn clean-out && yarn compile",
    "compile": "webpack --mode production",
    "watch": "webpack --mode development --watch --progress",
    "lint": "eslint \"src/**/*.ts\" \"tests/**/*.ts\" \"*.json\"  \"*.js\" ",
    "test": "jest",
    "watch-test": "yarn test -- --watch",
    "tsc": "tsc --noEmit"
  },
  "dependencies": {
    "istanbul-lib-coverage": "^3.0.0",
    "istanbul-lib-source-maps": "^4.0.0",
    "jest-editor-support": "^30.0.2",
    "vscode-codicons": "^0.0.4"
  },
  "devDependencies": {
    "@types/istanbul-lib-coverage": "^2.0.2",
    "@types/istanbul-lib-source-maps": "^4.0.1",
    "@types/jest": "^27.0.1",
    "@types/node": "^8.0.31",
    "@typescript-eslint/eslint-plugin": "^4.31.2",
    "@typescript-eslint/parser": "^4.31.2",
    "coveralls": "^3.1.0",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "^7.2.0",
    "eslint-plugin-import": "^2.24.2",
    "eslint-plugin-jest": "^24.4.2",
    "eslint-plugin-jsdoc": "^31.6.0",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-prettier": "^3.3.1",
    "jest": "^27.2.0",
    "prettier": "^2.4.1",
    "raw-loader": "^4.0.1",
    "rimraf": "^3.0.2",
    "ts-jest": "^27.0.5",
    "ts-loader": "^9.2.6",
    "typescript": "^4.3.2",
    "vscode-test": "^1.3.0",
    "webpack": "^5.53.0",
    "webpack-cli": "^4.8.0"
  },
  "__metadata": {
    "id": "7997a8ae-1fae-4022-b834-12f6318aeffd",
    "publisherDisplayName": "Orta",
    "publisherId": "c22b4001-1af3-48d1-87ed-490c6c3b747f"
  }
}
